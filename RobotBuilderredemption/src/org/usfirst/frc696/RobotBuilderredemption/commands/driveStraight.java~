// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.
package  org.usfirst.frc696.RobotBuilderredemption.commands;
import edu.wpi.first.wpilibj.Timer;
import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc696.RobotBuilderredemption.Robot;
/**
 *
 */
public class  driveStraight extends Command {
    double angle = 0;
    double distance;
    double speed;
    boolean done = false;
    
    
     public driveStraight(double _distance, double _speed){
        speed = _speed;
        distance = _distance;
        angle = Robot.driveTrain.getGyro();
        System.out.println(distance);
        
    }
    public driveStraight(double _distance){
        distance = _distance;
        speed = 0.3;
        angle = Robot.driveTrain.getGyro();
        System.out.println(distance);
    }
    public driveStraight(){
        distance=0;
        speed = 0;
    }
    // Called just before this Command runs the first time
    protected void initialize() {
        //angle = Robot.drive.getGyro();
        Robot.driveTrain.resetEncoders();
       
    }
    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
        
            done = Robot.driveTrain.arcadePIDDrive(speed, distance, angle);
        
        
    }
    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        //return (AutonomousCommand.timer.get()>Math.abs(distance));
         if(Math.abs(distance)<0.001) return true;
        return done;
    }
    // Called once after isFinished returns true
    protected void end() {
        Robot.driveTrain.arcadeDrive(0, 0);
    }
    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
        end();
    }
}
